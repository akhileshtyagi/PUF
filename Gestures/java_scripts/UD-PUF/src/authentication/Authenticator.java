package authentication;

import java.util.List;

import data.ChallengeResponse;
import data.Profile;

/**
 * Provides the ability to take a profile and new data to perform an
 * authentication
 * 
 * @author element
 *
 */
public class Authenticator {
    Profile profile;

    /**
     * Takes in the profile which new data will be authenticated against. It is
     * useful to do it in this way because there are calculations which may be
     * consistent among all sets of data which we may want to compare against
     * the profile. If this is the case, then we can store the results of these
     * calculations to save computation time.
     * 
     * @param profile
     */
    public Authenticator(Profile profile) {
	this.profile = profile;
    }

    /**
     * Returns true if the new data was likely generated by the same user which
     * generated the profile.
     * 
     * @return
     */
    public boolean authenticate(List<ChallengeResponse> newData) {
	//TODO
	return true;
    }
}
